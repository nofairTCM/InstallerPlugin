name: release

on:
  workflow_dispatch:
  push:
    branches:
    - master

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Create Version
        run: echo "VERSION=$(date +%Y%m%d)" >> $GITHUB_ENV
    outputs:
      version: ${{ env.VERSION }}
      obj: InstallerPlugin

  build:
    needs: setup
    env:
      OBJ: ${{ needs.setup.outputs.obj }}
      VERSION: ${{ needs.setup.outputs.version }}
      SECRETS_RBLXASSET: ${{ secrets.SECRETS_RBLXASSET }}
      SECRETS_RBLXTOKEN: ${{ secrets.SECRETS_RBLXTOKEN }}
    runs-on: windows-latest
    steps:
      - name: Download this repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download database repo
        uses: actions/checkout@v2
        with:
          repository: nofairTCM/Data
          path: db
          persist-credentials: false
          fetch-depth: 0

      - name: database update
        shell: cmd
        run: |
          db\app\luvit.exe db\moduleUpdate.lua -n %OBJ% -i src\version.txt

      - name: commit database
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git -C db commit -m "data base updated by github workflow (%OBJ%)" -a

      - name: push database
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.SECRETS_GHDBTOKEN }}
          branch: ${{ github.ref }}
          directory: db
          repository: nofairTCM/Data

      - name: Build to rbxmx file
        shell: cmd
        run: |
          mkdir out
          app\rojo.exe build app\build.project.json -o out\nofairTCM_Installer.rbxmx

      - name: Publish to rblx asset
        shell: cmd
        run: |
          @echo off
          app\rojo.exe upload app\build.project.json --asset_id %SECRETS_RBLXASSET% --cookie "%SECRETS_RBLXTOKEN%"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: out
          path: ${{ github.workspace }}/out/*

  release:
    needs: [setup, build]
    env:
      VERSION: ${{ needs.setup.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: Download repo
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15.0'

      - name: Setup GHR (for upload files)
        run: |
          go get -u github.com/tcnksm/ghr

      - name: make output dir
        run: mkdir out

      - name: Download output
        uses: actions/download-artifact@v2
        with:
          name: out
          path: out

      - name: Upload Plugin Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ghr -n "PLUGIN / ${{ env.VERSION }}.${{ env.GITHUB_RUN_NUMBER }}" -b "깃허브 워크플로우에 의해 자동 업로드됨\n안정성을 위해 RBXMX 파일을 받는것을 추천합니다" ${{ env.VERSION }}.${{ env.GITHUB_RUN_NUMBER }} out/
